#!/usr/bin/env python3

import os
import apt
import subprocess
import sys
from updateactions import *
from config import *

def main():
    # Get sudo privileges
    if elevate_privileges(): sys.exit(1)

    # Update and upgrade kali packages
    update_packages()

    # Install additional kali packages
    print_bold_green("Checking installed packages")
    apt_cache = apt.Cache()
    for package in packages_to_install:
        install_package(package, apt_cache)
    for package in packages_to_remove:
        remove_package(package, apt_cache)

    # Install python modules
    installed_pip_packages = [r.decode().split('==')[0] for r in \
        subprocess.check_output([sys.executable, '-m', 'pip', 'freeze']).split()]
    pip_package_install(pip_packages, installed_pip_packages)

    # Take ownership of the external tools directory
    #take_ownership(external_tools_directory)

    # Install golang tools
    for module in golang_modules_to_install:
        install_golang_module(module)

    # Create and remove specified directories
    print_bold_green("Creating directory structure")
    create_directory(personal_repo_directory)
    create_directory(external_tools_directory)
    for directory in directories_to_remove:
        remove_directory(directory)

    # Sync git repositories
    print_bold_green("Syncing git repositories")
    for repo in personal_repositories_to_sync:
        sync_git_repo(repo.replace(".git", ""), personal_repo_directory)
    for repo in ext_repositories_to_sync:
        sync_git_repo(repo, external_tools_directory)

    # Run *.sh and *.py files in the /scripts directory
    print_bold_green("Running scripts")
    run_scripts()

    # Show status of optional systemd services
    print_bold_green("Status of optional services")
    for system in systemd_services:
        if check_service_status(system) == False:
            print_green(system + " is active")
        else:
            print_red(system + " is inactive")

    print("\nAll done. Go break stuff.\n")


if __name__ == '__main__':
    main()


'''
TODO:
pip install impacket if it exists

'''
